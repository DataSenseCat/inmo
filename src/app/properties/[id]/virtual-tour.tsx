"use client";

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from "@/components/ui/dialog";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
  type CarouselApi,
} from "@/components/ui/carousel";
import Image from 'next/image';
import { Loader2, Sparkles, Wand2 } from "lucide-react";
import type { Property } from "@/lib/data";
import { generateVirtualTour } from "@/ai/flows/ai-virtual-tour";
import { useToast } from "@/hooks/use-toast";
import { urlToDataUri } from "@/lib/utils";

interface VirtualTourProps {
  property: Property;
}

export function VirtualTour({ property }: VirtualTourProps) {
  const [open, setOpen] = useState(false);
  const [loading, setLoading] = useState(false);
  const [narratives, setNarratives] = useState<string[]>([]);
  const [api, setApi] = useState<CarouselApi>();
  const [current, setCurrent] = useState(0);
  const { toast } = useToast();

  useEffect(() => {
    if (!api) return;
    setCurrent(api.selectedScrollSnap());
    api.on("select", () => {
      setCurrent(api.selectedScrollSnap());
    });
  }, [api]);

  const handleStartTour = async () => {
    setOpen(true);
    if (narratives.length > 0) return;

    setLoading(true);
    try {
      const imageDataUris = await Promise.all(
        property.images.map(url => urlToDataUri(url))
      );
      
      const result = await generateVirtualTour({
        imageDataUris,
        propertyDescription: property.description,
      });

      if (result.tourNarratives) {
        setNarratives(result.tourNarratives);
      } else {
        throw new Error("Failed to generate tour narratives.");
      }
    } catch (error) {
      console.error("Virtual Tour Error:", error);
      toast({
        variant: "destructive",
        title: "Virtual Tour Failed",
        description: "Could not generate the tour at this time. This may be due to network issues or image loading problems. Please try again later.",
      });
      setOpen(false); // Close dialog on error
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      <Button onClick={handleStartTour} className="w-full" size="lg" variant="secondary">
        <Wand2 className="mr-2 h-5 w-5" />
        Start AI Virtual Tour
      </Button>

      <Dialog open={open} onOpenChange={setOpen}>
        <DialogContent className="max-w-4xl h-[90vh] flex flex-col p-0">
          <DialogHeader className="p-6 pb-2">
            <DialogTitle className="font-headline flex items-center gap-2">
              <Sparkles className="h-5 w-5 text-primary" />
              AI Virtual Tour: {property.title}
            </DialogTitle>
            <DialogDescription>
                Explore each room with a descriptive narrative generated by AI.
            </DialogDescription>
          </DialogHeader>
          <div className="flex-grow min-h-0 flex flex-col px-6 pb-6">
            {loading ? (
                <div className="flex-grow flex flex-col items-center justify-center gap-4">
                    <Loader2 className="h-12 w-12 animate-spin text-primary" />
                    <p className="text-muted-foreground">Generating your virtual tour...</p>
                    <p className="text-sm text-muted-foreground/80">This may take a moment.</p>
                </div>
            ) : (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 flex-grow min-h-0">
                    <div className="relative bg-muted rounded-lg flex items-center justify-center">
                        <Carousel setApi={setApi} className="w-full h-full flex items-center">
                            <CarouselContent>
                                {property.images.map((img, index) => (
                                <CarouselItem key={index}>
                                    <div className="aspect-video relative h-full">
                                        <Image src={img} alt={`View ${index+1}`} fill className="object-contain rounded-md" data-ai-hint="property room" />
                                    </div>
                                </CarouselItem>
                                ))}
                            </CarouselContent>
                            <CarouselPrevious className="left-2" />
                            <CarouselNext className="right-2" />
                        </Carousel>
                    </div>
                    <div className="flex flex-col">
                        <h3 className="font-semibold text-lg font-headline mb-2">View {current + 1} of {property.images.length}</h3>
                        <div className="bg-muted/50 p-4 rounded-md flex-grow overflow-y-auto border">
                            {narratives.length > 0 ? (
                                <p className="leading-relaxed text-muted-foreground">{narratives[current]}</p>
                            ) : (
                                <div className="space-y-2">
                                    <div className="w-full h-4 bg-muted animate-pulse rounded"></div>
                                    <div className="w-5/6 h-4 bg-muted animate-pulse rounded"></div>
                                    <div className="w-full h-4 bg-muted animate-pulse rounded"></div>
                                    <div className="w-3/4 h-4 bg-muted animate-pulse rounded"></div>
                                </div>
                            )}
                        </div>
                    </div>
                </div>
            )}
          </div>
          <DialogFooter className="p-6 pt-2 border-t">
            <Button variant="outline" onClick={() => setOpen(false)}>Close</Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </>
  );
}
